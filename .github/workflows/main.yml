name: RDP

on:
  workflow_dispatch:
    inputs:
      rdp_password:
        description: Custom RDP user password
        required: true
        type: string

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'UserAuthentication' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'SecurityLayer' -Value 0 -Force
          netsh advfirewall firewall delete rule name='RDP-Tailscale' | Out-Null
          netsh advfirewall firewall add rule name='RDP-Tailscale' dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create RDP User
        run: |
          $password = '${{ github.event.inputs.rdp_password }}'
          if (-not $password) {
              Write-Error 'Password not provided'
              exit 1
          }
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name 'RDP' -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group 'Administrators' -Member 'RDP'
          Add-LocalGroupMember -Group 'Remote Desktop Users' -Member 'RDP'
          if (-not (Get-LocalUser -Name 'RDP')) {
              Write-Error 'User creation failed'
              exit 1
          }
          echo "RDP_CREDS=User: RDP | Password: $password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $url = 'https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi'
          $path = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $path
          Start-Process msiexec.exe -ArgumentList "/i", "`"$path`"", '/quiet', '/norestart' -Wait
          Remove-Item $path -Force

      - name: Connect Tailscale
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          $ip = $null
          for ($i = 0; $i -lt 10 -and -not $ip; $i++) {
              $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
          }
          if (-not $ip) {
              Write-Error 'Tailscale IP not assigned'
              exit 1
          }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

      - name: Verify RDP Connectivity
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          if (-not (Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389).TcpTestSucceeded) {
              Write-Error 'RDP port 3389 connection failed'
              exit 1
          }
          Write-Host 'RDP connectivity verified'

      - name: Maintain RDP Session
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: RDP"
          Write-Host "Password: $($env:RDP_CREDS -replace 'User: RDP \| Password: ', '')"
          Write-Host "==================`n"
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active - Ctrl+C to terminate"
              Start-Sleep -Seconds 300
          }
